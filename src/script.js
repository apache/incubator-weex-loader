import loaderUtils from 'loader-utils'
import {
  parseScript
} from './parser'

module.exports = function (source, map) {
  const loaderQuery = loaderUtils.parseQuery(this.query)
  let weexRequire = '__weex_require__'
  if (loaderQuery && loaderQuery.weexRequire) {
    weexRequire = loaderQuery.weexRequire
  }
  this.cacheable && this.cacheable()

  const callback = this.async()

  parseScript(source)
    .then(({
      parsed
    }) => {
      let requireList = parsed.match(/require\([^()]+?\)/g)

      if (requireList && requireList.length > 0) {
        requireList = requireList.filter(str => {
          if (str.indexOf('@weex-module') > 0) {
            parsed = parsed.replace(str, str.replace('require', weexRequire))
            return true
          }
          return false
        }).join('\n')
      }

      let result = `module.exports = function(module, exports, ${weexRequire}){${parsed}}`
      result += '\n/* generated by weex-loader */\n'
      callback(null, result, map)
    }).catch(e => {
      callback(e, '')
    })
}
